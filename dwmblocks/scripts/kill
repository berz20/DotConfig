#!/usr/bin/env bash

DIR="/usr/share/archcraft/dwm"

rofi_command="rofi -theme $DIR/rofi/themes/calc.rasi"


set -euo pipefail
_path="$(cd "$(dirname "${BASH_SOURCE[0]}")" && cd "$(dirname "$(readlink "${BASH_SOURCE[0]}" || echo ".")")" && pwd)"
# if [[  -f "${_path}/_dm-helper.sh" ]]; then
#   # shellcheck disable=SC1090,SC1091
#   source "${_path}/_dm-helper.sh"
# else
#   # shellcheck disable=SC1090
#   echo "No helper-script found"
# fi

# # script will not hit this if there is no config-file to load
# # shellcheck disable=SC1090
# source "$(get_config)"

main() {
    # Running ps to get running processes and display in dmenu.
    # In this script we use a variable called $DMENU, in your scripts, you
    # should just write dmenu or rofi or whatever launcher you use.
    selected="$(ps -ax --no-headers --format=pid,rss,command --sort=-rss,pid | \
								awk 'BEGIN{suffixes_len=split("kB MB GB TB",suffixes)} \
								{n_suffix=1; while($2 > 1000 && n_suffix < suffixes_len) {$2 /= 1024; n_suffix++;}; \
								printf "%5s %7.2f %2s %s\n",$1,$2,suffixes[n_suffix],substr($0, index($0,$3))}' | \
                $rofi_command "$@" | \
                awk '{print $1" "$4}')";

    # Nested 'if' statements.  The outer 'if' statement is what to do
    # when we select one of the 'selected' options listed in dmenu.
    if [[ -n $selected ]]; then
        # Piping No/Yes into dmenu as a  aux case you
        answer="$(echo -e "Yes\nNo" | $rofi_command "$@")"

        if [[ $answer == "Yes" ]]; then
            # This echo command prints everything before the first space.
	    # Luke Smith has a video on why this is most efficient in this case
	    # An alternative way to do it would be with awk or cut, both are less 
            # efficient however.
            kill -9 "${selected%% *}"
            echo "Process $selected has been killed." && exit 0
        else
	    # We want this script to exit with a 1 and not 0 because 1 means
	    # an error, so this can be handled by other scripts better
            echo "Program terminated." && exit 1
        fi
    fi
}

[[ "${BASH_SOURCE[0]}" == "${0}" ]] && main "$@"

