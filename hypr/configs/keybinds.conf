# Please note not all available settings / options are set here.
# For a full list, see the wiki
# See https://wiki.hyprland.org/Configuring/Keywords/ for more


## Setting variables

source=~/.config/hypr/configs/variables.conf


## Switches

# trigger when the switch is toggled
bindl=,switch:Lid Switch,exec,$lock
# trigger when the switch is turning on
bindl=,switch:on:Lid Switch,exec,hyprctl keyword monitor ", disable"
bindl=,switch:on:Lid Switch,exec,systemctl suspend
# trigger when the switch is turning off
# bindl=,switch:off:Lid Switch,exec,hyprctl keyword monitor "eDP-1,1920x1080@60,0x0,1"

# check out your switches in hyprctl devices.


## Preferred apps

bind = $mainMod SHIFT, F, exec, $files
bind = $mainMod SHIFT, D, exec, $documents
bind = $mainMod SHIFT, W, exec, $browser
bind = $mainMod SHIFT, P, exec, $mail
bind = $mainMod SHIFT, S, exec, $music
bind = $mainMod SHIFT, M, exec, $matlab
bind = $mainMod SHIFT, V, exec, $vivado


## Terminal 

bind = $mainMod,Return,exec,$term 
bind = $mainMod SHIFT,Return,exec,$t-term 
bind = $mainMod CTRL,Return,exec,$swallow 


# AGS
bind = CTRL SHIFT,R,      exec, ags -b hypr quit; ags -b hypr
bindr= $mainMod,  SUPER_L,exec, pkill wofi || ags -b hypr toggle-window applauncher
bind = $mainMod,  Q,      exec, ags -b hypr toggle-window powermenu
bind = $mainMod,  W,      exec, ags -b hypr toggle-window overview
bind = ALT,       Tab,    exec, ags -b hypr toggle-window overview

## WOFI Commands

# bindr= $mainMod,SUPER_L,exec,pkill wofi || $menu
# bind = $mainMod,Q,exec, $powermenu
bind = $mainMod,Y,exec, $clipboard
bind = $mainMod,B,exec, $kill
bind = $mainMod,N,exec, $network
# bind = $mainMod,W,exec, $window
# bind = ALT,Tab,exec, $window


## Lock, Volume, Brightness

bind = $mainMod, F12, exec, $lock

bind=CTRLSHIFT,space,exec,playerctl play-pause
bind=CTRLSHIFT,K,exec,playerctl next
bind=CTRLSHIFT,J,exec,playerctl previous
bindl = , xf86audioraisevolume, exec, $volume --inc-ags
bindl = , xf86audiolowervolume, exec, $volume --dec-ags
bindl = , xf86audiomute, exec, $volume --toggle-ags
bindl = CTRL, xf86audiomute, exec, $volume --toggle-mic-ags
bind  = , XF86MonBrightnessDown,exec,$backlight --dec-ags
bind  = , XF86MonBrightnessUp,exec,$backlight --inc-ags
bind  = SHIFT, XF86MonBrightnessDown,exec,$backlight --decp
bind  = SHIFT, XF86MonBrightnessUp,exec,$backlight --incp
bind  = CTRL, XF86MonBrightnessDown, exec,$backlight --dark
# bind  = CTRL, XF86MonBrightnessDown, exec, hyprctl keyword decoration:screen_shader $scriptsDir/flux.glsl
# bind  = CTRL, XF86MonBrightnessUp, exec, hyprctl keyword decoration:screen_shader "[[EMPTY]]"
bind  = ALT CTRL, down,exec,$backlight --warm

## Night mode (blue filter)

# bind  = CTRL, XF86MonBrightnessDown,exec,$backlight --low
# bind = $mainMod, T, exec, hyprctl keyword decoration:screen_shader $scriptsDir/flux.glsl
# bind = $mainMod SHIFT, T, exec, hyprctl keyword decoration:screen_shader "[[EMPTY]]"


## Scrrenshot

$screenshotarea = hyprctl keyword animation "fadeOut,0,0,default"; grimblast --notify save area ~/Pictures/Screenshots/$(date +'%s_grim.png'); hyprctl keyword animation "fadeOut,1,4,default"
bind = $mainMod, Print, exec, $screenshotarea
# bind = , Print, exec, grimblast --notify --cursor copysave output
# bind = ALT, Print, exec, grimblast --notify --cursor copysave screen
# bind=,Print,exec,grim $(xdg-user-dir PICTURES)/Screenshots/$(date +'%Y%m%d%H%M%S_1.png') && notify-send 'Screenshot Saved'
# bind=$mainMod,Print,exec,grim - | wl-copy && notify-send 'Screenshot Copied to Clipboard'
# bind=$mainModSHIFT,Print,exec,grim - | swappy -f -
# bind=$mainModSHIFT,S,exec,slurp | grim -g - $(xdg-user-dir PICTURES)/Screenshots/$(date +'%Y%m%d%H%M%S_1.png') && notify-send 'Screenshot Saved'


## Window control

bind = $mainMod, x, killactive,
bind = $mainMod SHIFT, Q, exit,

bind = $mainMod, Space, fullscreen,1
bind = $mainMod CTRL, Space, fakefullscreen
# bind = , F11, fullscreen,0
bind = , F11, exec, $fullscreen

bind = SUPERSHIFT, Space, togglefloating,
bind = $mainMod, P, pin, # dwindle
bind = $mainMod, S, layoutmsg,orientationnext # master
bind = $mainMod, Tab, layoutmsg,swapwithmaster # master
bind = $mainMod, period, exec, $scriptsDir/switch_layout.sh


## Window Movement

## Focus

bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

bind = $mainMod,left,bringactivetotop,   # bring it to the top
bind = $mainMod,right,bringactivetotop,   # bring it to the top
bind = $mainMod,up,bringactivetotop,   # bring it to the top
bind = $mainMod,down,bringactivetotop,   # bring it to the top

bind = $mainMod,J,cyclenext, prev          # change focus to another window
bind = $mainMod,J,bringactivetotop,   # bring it to the top
bind = $mainMod,K,cyclenext          # change focus to another window
bind = $mainMod,K,bringactivetotop,   # bring it to the top

## Move

bind = $mainMod SHIFT, left, movewindow, l
bind = $mainMod SHIFT, right, movewindow, r
bind = $mainMod SHIFT, up, movewindow, u
bind = $mainMod SHIFT, down, movewindow, d

bind = $mainMod SHIFT, h, movewindow, l
bind = $mainMod SHIFT, l, movewindow, r
bind = $mainMod SHIFT, k, movewindow, u
bind = $mainMod SHIFT, j, movewindow, d

## Resize

bind = $mainMod CTRLALT, left, resizeactive, -20 0
bind = $mainMod CTRLALT, right, resizeactive, 20 0
bind = $mainMod CTRLALT, H, resizeactive, -20 0
bind = $mainMod CTRLALT, L, resizeactive, 20 0
bind = $mainMod CTRLALT, up, resizeactive, 0 -20
bind = $mainMod CTRLALT, down, resizeactive, 0 20

## Group

bind= $mainMod SHIFT, slash, togglegroup
bind= ALT, right, changegroupactive, f
bind= ALT, left, changegroupactive, b
bind= ALT, m, changegroupactive, f
bind= ALT, n, changegroupactive, b
bind= $mainMod , escape, moveoutofgroup
bind= $mainMod , slash, moveintogroup, d
bind= $mainMod , slash, moveintogroup, u
bind= $mainMod , slash, moveintogroup, l
bind= $mainMod , slash, moveintogroup, r

bind= $mainMod ALT , up, exec, hyprctl dispatch togglegroup; hyprctl dispatch movefocus u; hyprctl dispatch moveintogroup d;  hyprctl dispatch changegroupactive b;
bind= $mainMod ALT , down, exec, hyprctl dispatch togglegroup; hyprctl dispatch movefocus d; hyprctl dispatch moveintogroup u;  hyprctl dispatch changegroupactive b;
bind= $mainMod ALT , right, exec, hyprctl dispatch togglegroup; hyprctl dispatch movefocus r; hyprctl dispatch moveintogroup l;  hyprctl dispatch changegroupactive b;
bind= $mainMod ALT , left, exec, hyprctl dispatch togglegroup; hyprctl dispatch movefocus l; hyprctl dispatch moveintogroup r;  hyprctl dispatch changegroupactive b;
# will switch to a submap called group
bind=ALT $mainMod, minus,submap,group

# will start a submap called "group"
submap=group

# sets repeatable binds for resizing the active window
binde=,Return, moveintogroup, r 
binde=,Return, moveintogroup, l 
binde=,Return, moveintogroup, u 
binde=,Return, moveintogroup, d 
 
binde=,right, movefocus, r
binde=,left,movefocus, l
binde=,up,movefocus, u
binde=,down,movefocus, d

# use reset to go back to the global submap
bind=,escape,submap,reset 

# will reset the submap, meaning end the current one and return to the global one
submap=reset

## Workspaces

bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

bind = $mainMod CTRL, right, workspace, e+1
bind = $mainMod CTRL, left, workspace, e-1
bind = $mainMod CTRL, up, workspace, +1
bind = $mainMod CTRL, down, workspace, -1

bind = $mainMod CTRL, K, workspace, e+1
bind = $mainMod CTRL, J, workspace, e-1
bind = $mainMod CTRL, L, workspace, +1
bind = $mainMod CTRL, H, workspace, -1

bind = ALT, 1, movetoworkspace, 1
bind = ALT, 2, movetoworkspace, 2
bind = ALT, 3, movetoworkspace, 3
bind = ALT, 4, movetoworkspace, 4
bind = ALT, 5, movetoworkspace, 5
bind = ALT, 6, movetoworkspace, 6
bind = ALT, 7, movetoworkspace, 7
bind = ALT, 8, movetoworkspace, 8
bind = ALT, 9, movetoworkspace, 9
bind = ALT, 0, movetoworkspace, 10

bind=ALTSHIFT,right,movetoworkspace,e+1
bind=ALTSHIFT,left,movetoworkspace,e-1
bind=ALTSHIFT,up,movetoworkspace,+1
bind=ALTSHIFT,down,movetoworkspace,-1

bind=ALTSHIFT,K,movetoworkspace,e+1
bind=ALTSHIFT,J,movetoworkspace,e-1
bind=ALTSHIFT,L,movetoworkspace,+1
bind=ALTSHIFT,H,movetoworkspace,-1


## Special workspaces

## Special

bind = $mainMod, comma, togglespecialworkspace
bind = $mainModSHIFT, comma, movetoworkspace, special

## File

bind = $mainMod, V, togglespecialworkspace, file
bind = $mainMod SHIFT, V, exec, [workspace special:file] $t-files
bind = $mainModCTRL, V, movetoworkspace, special:file

## Term

bind = $mainMod, C,togglespecialworkspace, term
bind = $mainMod SHIFT, C, exec, [workspace special:term] $term
bind = $mainModCTRL, C, movetoworkspace,special:term

## Calc

bind = $mainMod, backslash,togglespecialworkspace, calc
bind = $mainMod SHIFT, backslash, exec, [workspace special:calc] $calc
bind = $mainModCTRL, backslash, movetoworkspace, special:calc

## T-term

bind = $mainMod, less,togglespecialworkspace, t-term
bind = $mainMod SHIFT, less, exec, $t-term
bind = $mainModCTRL, less, movetoworkspace, special:t-term


## Mouse 

bindm = $mainMod, mouse:272, movewindow
bind = $mainMod, mouse:272,bringactivetotop,   # bring it to the top
bindm = SUPERCTRL, mouse:272, resizewindow
bind = SUPERCTRL, mouse:272,bringactivetotop,   # bring it to the top
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1
