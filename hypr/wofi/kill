#!/usr/bin/env bash

DIR="/home/berz/.config/hypr"

yes="Yes"
no="No"

# Get user confirmation
get_confirmation() {
	echo -e "$yes\n$no" | wofi --dmenu -W 150 -L 3 -i -a -I \
		-p "Are You Sure?"
}

# Show message
show_msg() {
	notify-send -h string:x-canonical-private-synchronous:sys-notify -u low -i "" "Options  -  yes / y / no / n"
}

set -euo pipefail
_path="$(cd "$(dirname "${BASH_SOURCE[0]}")" && cd "$(dirname "$(readlink "${BASH_SOURCE[0]}" || echo ".")")" && pwd)"
# if [[  -f "${_path}/_dm-helper.sh" ]]; then
#   # shellcheck disable=SC1090,SC1091
#   source "${_path}/_dm-helper.sh"
# else
#   # shellcheck disable=SC1090
#   echo "No helper-script found"
# fi

# # shellcheck disable=SC1090
# source "$(get_config)"

main() {
	# Running ps to get running processes and display in dmenu.
	list="$(ps -ax --no-headers --format=pid,rss,command --sort=-rss,pid |
		awk 'BEGIN{suffixes_len=split("kB MB GB TB",suffixes)} \
								{n_suffix=1; while($2 > 1000 && n_suffix < suffixes_len) {$2 /= 1024; n_suffix++;}; \
                                    printf "%7.2f %2s %s %5s\n",$2,suffixes[n_suffix],(substr($0, index($0,$3))),$1}')"

	# list="$(ps -ax --no-headers --format=rss,pid,user,command | sort -rn |
	# 	awk 'BEGIN{suffixes_len=split("kB MB GB TB",suffixes)} \
	# 							{n_suffix=1; while($1 > 1000 && n_suffix < suffixes_len) {$1 /= 1024; n_suffix++;}; \
	#                                    {printf ("%7.2f %2s ",$1,suffixes[n_suffix])}
	#                                    {printf ("%s %s %s %5s\n",$4,$5,$6,$2)}}')"
	chosen=$(echo -e "$list" | wofi -W 500 -i -a -I -p "Kill app" --dmenu)
	# when select one of the 'selected' options listed in dmenu.
	if [[ -n $chosen ]]; then
		# Piping No/Yes into dmenu as a  aux case you
		ans=$(get_confirmation &)

		if [[ $ans == "yes" ]] || [[ $ans == "YES" ]] || [[ $ans == "y" ]] || [[ $ans == "Yes" ]]; then
			selpid="$(awk '{print $NF}' <<<$chosen)"
			kill -9 $selpid && notify-send -h string:x-canonical-private-synchronous:sys-notify -u low -i "" "Killed process "
		elif [[ $ans == "no" ]] || [[ $ans == "NO" ]] || [[ $ans == "n" ]] || [[ $ans == "No" ]]; then
			exit
		else
			show_msg
		fi
	fi
}

[[ "${BASH_SOURCE[0]}" == "${0}" ]] && main "$@"
