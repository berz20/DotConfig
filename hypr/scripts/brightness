#!/usr/bin/env bash

## Script To Manage Brightness For Archcraft (in Wayland).

iDIR="$HOME/.config/hypr/mako/icons"

# Get brightness
get_backlight() {
	LIGHT=$(printf "%.0f\n" $(light -G))
	echo "${LIGHT}%"
}

# Get icons
get_icon() {
	backlight="$(get_backlight)"
	current="${backlight%%%}"
	if [[ ("$current" -ge "0") && ("$current" -le "20") ]]; then
		icon="$iDIR/brightness-20.png"
	elif [[ ("$current" -ge "20") && ("$current" -le "40") ]]; then
		icon="$iDIR/brightness-40.png"
	elif [[ ("$current" -ge "40") && ("$current" -le "60") ]]; then
		icon="$iDIR/brightness-60.png"
	elif [[ ("$current" -ge "60") && ("$current" -le "80") ]]; then
		icon="$iDIR/brightness-80.png"
	elif [[ ("$current" -ge "80") && ("$current" -le "100") ]]; then
		icon="$iDIR/brightness-100.png"
	fi
}

# Get icons
get_icon_ags() {
	backlight="$(get_backlight)"
	current="${backlight%%%}"
	if [[ ("$current" -ge "0") && ("$current" -le "30") ]]; then
		echo "display-brightness-low-symbolic"
	elif [[ ("$current" -ge "30") && ("$current" -le "60") ]]; then
		echo "display-brightness-medium-symbolic"
	elif [[ ("$current" -ge "60") && ("$current" -le "100") ]]; then
		echo "display-brightness-high-symbolic"
	fi
}

# Notify
notify_user() {
	notify-send -h string:x-canonical-private-synchronous:sys-notify -u low -i "$icon" "Brightness : $(get_backlight)"
}

# Increase brightness
inc_backlight() {
	brightnessctl s +2% && get_icon && notify_user
}

# Decrease brightness
dec_backlight() {
	brightnessctl s 2%- && get_icon && notify_user
}

# Increase brightness AGS
inc_backlight_ags() {
	ags -b hypr -r "brightness.screen += 0.05; indicator.display()"
}

# Decrease brightness AGS
dec_backlight_ags() {
	ags -b hypr -r "brightness.screen -= 0.05; indicator.display()"
}

# Increase precision brightness
inc_prec_backlight() {
	brightnessctl s +100 && get_icon && notify_user
}

# Decrease precision brightness
dec_prec_backlight() {
	brightnessctl s 100- && get_icon && notify_user
}

# Set lowest brightness
low_backlight() {
	brightnessctl s 1 && get_icon && notify_user
}

# Set warm brightness
warm_backlight() {
	if pgrep -x "gammastep" >/dev/null; then
		notify-send -h string:x-canonical-private-synchronous:sys-notify -u low -i "$(get_icon_ags)" "Blue Filter Off" "Display Brightness"
		kill -9 $(pgrep -x "gammastep")
	else
		notify-send -h string:x-canonical-private-synchronous:sys-notify -u low -i "display-brightness-off-symbolic" "Blue Filter On" "Display Brightness"
		gammastep -m wayland -PO 3200
	fi

}

# Set dark brightness
dark_backlight() {
	if [[ "$(hyprctl -j getoption decoration:screen_shader | jq -r '.str')" == "/home/berz/.config/hypr/scripts/flux.glsl" ]]; then
		notify-send -h string:x-canonical-private-synchronous:sys-notify -u low -i "$(get_icon_ags)" "Dark Filter Off" "Display Brightness"
		hyprctl keyword decoration:screen_shader "[[EMPTY]]"
	elif [[ "$(hyprctl -j getoption decoration:screen_shader | jq -r '.str')" == "[[EMPTY]]" ]]; then
		notify-send -h string:x-canonical-private-synchronous:sys-notify -u low -i "display-brightness-off-symbolic" "Dark Filter On" "Display Brightness"
		hyprctl keyword decoration:screen_shader /home/berz/.config/hypr/scripts/flux.glsl
	fi
}

# Set cold brightness
cold_backlight() {
	gammastep -m wayland -x
}
# Execute accordingly
if [[ "$1" == "--get" ]]; then
	get_backlight
elif [[ "$1" == "--inc" ]]; then
	inc_backlight
elif [[ "$1" == "--dec" ]]; then
	dec_backlight
elif [[ "$1" == "--inc-ags" ]]; then
	inc_backlight_ags
elif [[ "$1" == "--dec-ags" ]]; then
	dec_backlight_ags
elif [[ "$1" == "--incp" ]]; then
	inc_prec_backlight
elif [[ "$1" == "--decp" ]]; then
	dec_prec_backlight
elif [[ "$1" == "--low" ]]; then
	low_backlight
elif [[ "$1" == "--dark" ]]; then
	dark_backlight
elif [[ "$1" == "--warm" ]]; then
	warm_backlight
else
	get_backlight
fi
